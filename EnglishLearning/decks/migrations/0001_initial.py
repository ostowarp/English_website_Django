# Generated by Django 5.1.1 on 2024-10-26 07:36

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_alter_profile_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('name', models.CharField(max_length=200)),
                ('deck_image', models.ImageField(blank=True, default='default.svg', null=True, upload_to='deck_images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decks', to='users.profile')),
                ('parent_deck', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subdecks', to='decks.deck')),
            ],
        ),
        migrations.CreateModel(
            name='FlashCard',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='decks.deck')),
            ],
        ),
        migrations.CreateModel(
            name='CardContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.CharField(choices=[('front', 'Front'), ('back', 'Back')], max_length=5)),
                ('content_type', models.CharField(choices=[('title', 'title'), ('text', 'Text'), ('image', 'Image')], max_length=5)),
                ('text', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='card_images/')),
                ('order', models.PositiveIntegerField(editable=False)),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content', to='decks.flashcard')),
            ],
            options={
                'ordering': ['-side', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ReviewHistory',
            fields=[
                ('reviewed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('review_rate', models.CharField(choices=[('E', 'Easy'), ('G', 'Good'), ('H', 'Hard'), ('A', 'Again')], max_length=1)),
                ('interval', models.IntegerField()),
                ('repetition_count', models.IntegerField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='decks.flashcard')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_reviewed', models.DateTimeField(blank=True, null=True)),
                ('next_review', models.DateTimeField(default=django.utils.timezone.now)),
                ('interval_day', models.PositiveIntegerField(default=1)),
                ('repetition_count', models.PositiveBigIntegerField(default=0)),
                ('difficulty', models.FloatField(default=2.5)),
                ('flashcard', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='decks.flashcard')),
            ],
        ),
    ]
